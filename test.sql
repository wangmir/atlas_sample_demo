-- create "nss_group" table
CREATE TABLE "nss_group" ("model_name" character varying(16) NOT NULL, "name" character varying(16) NOT NULL, "gid" integer NOT NULL, "uids" integer[] NOT NULL, PRIMARY KEY ("model_name", "name"));
-- create "config" table
CREATE TABLE "config" ("config_type" character varying(16) NOT NULL, "name" character varying(32) NOT NULL, "value" character varying(128) NOT NULL, PRIMARY KEY ("config_type", "name"));
-- create "recorded_event" table
CREATE TABLE "recorded_event" ("event_id" character varying(36) NOT NULL, "policy_id" character varying(36) NOT NULL, "vehicle_id" character varying(36) NOT NULL, "trigger_policy_id" integer NOT NULL, "start_time" timestamptz NOT NULL, "stop_time" timestamptz NULL, "duration_before_start" integer NOT NULL, "frame_file_paths" text[] NULL, "state" character varying(20) NOT NULL, "comment" text NULL, "upload_time" timestamptz NULL DEFAULT CURRENT_TIMESTAMP, "modification_time" timestamptz NULL, PRIMARY KEY ("event_id"));
-- create index "recorded_event_vehicle_id_policy_id_trigger_policy_id_start_idx" to table: "recorded_event"
CREATE UNIQUE INDEX "recorded_event_vehicle_id_policy_id_trigger_policy_id_start_idx" ON "recorded_event" ("vehicle_id", "policy_id", "trigger_policy_id", "start_time");
-- create "recorded_frame" table
CREATE TABLE "recorded_frame" ("vehicle_id" character varying(36) NOT NULL, "frame_id" character varying(36) NULL, "file_path" text NOT NULL, "camera" character varying(16) NOT NULL, "event_time" timestamptz NOT NULL, "latitude" double precision NOT NULL, "longtitude" double precision NOT NULL, "frame_size" integer NULL, "deep_learning_model" character varying(16) NOT NULL, "uncertainty" double precision NOT NULL, "upload_time" timestamptz NULL DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("vehicle_id", "file_path", "event_time"));
-- create "vehicle_security_3rd_party_entry" table
CREATE TABLE "vehicle_security_3rd_party_entry" ("domain_name" character varying(255) NULL, "ip_addr" character varying(16) NULL, "tag" character varying(10) NULL, "score" integer NULL, "risk_factor" integer NULL, "ransomware" boolean NULL, "bad_domain" boolean NULL, "domain_status" character varying(30)[] NULL, "domain_creation_date" timestamptz NULL, "domain_expiration_date" timestamptz NULL, "domain_registrar_name" text NULL, "domain_registrant_name" text NULL, "domain_registrant_email" text NULL, "domain_updated_date" timestamptz NULL, "creation_time" timestamptz NOT NULL);
-- create "vehicle_registration" table
CREATE TABLE "vehicle_registration" ("vin" character varying(64) NOT NULL, "brand_name" character varying(16) NOT NULL, "unit" character varying(10) NOT NULL, "vehicle_id" character varying(36) NOT NULL, "client_id" character varying(36) NOT NULL, PRIMARY KEY ("vin", "brand_name", "unit"));
-- create "location_data_record_grafana" table
CREATE TABLE "location_data_record_grafana" ("vehicle_id" character varying(36) NOT NULL, "policy_id" character varying(36) NOT NULL, "trigger_policy_ids" integer[] NULL, "latitude" double precision NOT NULL, "longitude" double precision NOT NULL, "time" timestamptz NULL DEFAULT CURRENT_TIMESTAMP);
-- create index "location_data_record_grafana_time_vehicle_id_policy_id_trig_idx" to table: "location_data_record_grafana"
CREATE INDEX "location_data_record_grafana_time_vehicle_id_policy_id_trig_idx" ON "location_data_record_grafana" ("time", "vehicle_id", "policy_id", "trigger_policy_ids");
-- create "policy_transaction" table
CREATE TABLE "policy_transaction" ("transaction_id" character varying(36) NOT NULL, "policy_ids" character varying(36)[] NULL, PRIMARY KEY ("transaction_id"));
-- create "vehicle_incident_action" table
CREATE TABLE "vehicle_incident_action" ("action_id" character varying(36) NOT NULL, "user_enabled" boolean NULL, "type" character varying(36) NOT NULL, "tags" text[] NULL, "vehicle_ids_policy_ids" character varying(36)[] NULL, "state" character varying(20) NULL, "modification_time" timestamptz NULL, "creation_time" timestamptz NOT NULL, PRIMARY KEY ("action_id"));
-- create "nss_user" table
CREATE TABLE "nss_user" ("model_name" character varying(16) NOT NULL, "name" character varying(32) NOT NULL, "uid" integer NOT NULL, PRIMARY KEY ("model_name", "name"));
-- create "nss_client" table
CREATE TABLE "nss_client" ("model_name" character varying(16) NOT NULL, "name" character varying(16) NOT NULL, "ip" character varying(16) NOT NULL, PRIMARY KEY ("model_name", "name"));
-- create "trigger_policy_data_record" table
CREATE TABLE "trigger_policy_data_record" ("vehicle_id" character varying(36) NOT NULL, "policy_id" character varying(36) NOT NULL, "trigger_policy_ids" integer[] NULL, "event_time" timestamptz NULL, "data_type" character varying(24) NOT NULL, "data" bytea NOT NULL, "creation_time" timestamptz NULL DEFAULT CURRENT_TIMESTAMP);
-- create index "trigger_policy_data_record_vehicle_id_policy_id_trigger_pol_idx" to table: "trigger_policy_data_record"
CREATE INDEX "trigger_policy_data_record_vehicle_id_policy_id_trigger_pol_idx" ON "trigger_policy_data_record" ("vehicle_id", "policy_id", "trigger_policy_ids", "event_time");
-- create "network_data_record_grafana" table
CREATE TABLE "network_data_record_grafana" ("vehicle_id" character varying(36) NOT NULL, "policy_id" character varying(36) NOT NULL, "trigger_policy_ids" integer[] NULL, "bus_id" character varying(36) NOT NULL, "data_type" character varying(24) NOT NULL, "network_name" character varying(36) NULL, "msg_id" character varying(36) NOT NULL, "msg_name" character varying(36) NOT NULL, "signal_id" character varying(36) NOT NULL, "signal_name" character varying(36) NOT NULL, "value" double precision NULL, "time" timestamptz NULL DEFAULT CURRENT_TIMESTAMP);
-- create index "network_data_record_grafana_time_vehicle_id_policy_id_trigg_idx" to table: "network_data_record_grafana"
CREATE INDEX "network_data_record_grafana_time_vehicle_id_policy_id_trigg_idx" ON "network_data_record_grafana" ("time", "vehicle_id", "policy_id", "trigger_policy_ids", "signal_id");
-- create "engine_type" table
CREATE TABLE "engine_type" ("engine_type_id" integer NOT NULL, "name" character varying(32) NOT NULL, "description" character varying(64) NULL, PRIMARY KEY ("engine_type_id"));
-- create index "engine_type_name_key" to table: "engine_type"
CREATE UNIQUE INDEX "engine_type_name_key" ON "engine_type" ("name");
-- create "src_ip_ecu" table
CREATE TABLE "src_ip_ecu" ("model_name" character varying(16) NOT NULL, "version" character varying(32) NOT NULL, "src_ip" character varying(32) NOT NULL, "ecu_name" character varying(16) NOT NULL, PRIMARY KEY ("model_name", "version", "src_ip"));
-- create "vam_http_action_request" table
CREATE TABLE "vam_http_action_request" ("receive_time" timestamptz NOT NULL, "headers" text NULL, "body" text NULL);
-- create "file_attributes" table
CREATE TABLE "file_attributes" ("file_id" character varying(36) NOT NULL, "file_name" character varying(256) NOT NULL, "file_size" integer NOT NULL, "file_type" character varying(10) NOT NULL, "last_modified_time" timestamptz NOT NULL, PRIMARY KEY ("file_id"));
-- create "file_metadata" table
CREATE TABLE "file_metadata" ("file_id" character varying(36) NOT NULL, "file_name" character varying(256) NOT NULL, "vehicle_id" character varying(36) NOT NULL, "subtype" character varying(32) NOT NULL, "data_type" character varying(64) NOT NULL, "trace_id" character varying(36) NOT NULL, "file_size_in_byte" integer NOT NULL, "last_modified_time" timestamptz NOT NULL, "creation_time" timestamptz NOT NULL, PRIMARY KEY ("file_id"));
-- create "file_record" table
CREATE TABLE "file_record" ("id" character varying(36) NOT NULL, "file_path" character varying(256) NOT NULL, "file_size" integer NOT NULL, "file_type" character varying(10) NOT NULL, "creation_time" timestamptz NOT NULL, "last_modified_time" timestamptz NOT NULL, PRIMARY KEY ("id"));
-- create "system_share_directory" table
CREATE TABLE "system_share_directory" ("directory_id" character varying(36) NOT NULL, "name" character varying(32) NOT NULL, "path" character varying(256) NOT NULL, "user_owner" character varying(32) NOT NULL, "group_owner" character varying(32) NOT NULL, PRIMARY KEY ("directory_id"));
-- create index "system_share_directory_name_path_user_owner_group_owner_key" to table: "system_share_directory"
CREATE UNIQUE INDEX "system_share_directory_name_path_user_owner_group_owner_key" ON "system_share_directory" ("name", "path", "user_owner", "group_owner");
-- create "trigger_policy_metadata" table
CREATE TABLE "trigger_policy_metadata" ("vehicle_id" character varying(36) NOT NULL, "policy_id" character varying(36) NOT NULL, "trigger_policy_id" integer NOT NULL, "start_time" timestamptz NOT NULL, "end_time" timestamptz NULL, "state" character varying(8) NOT NULL, "creation_time" timestamptz NULL DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("vehicle_id", "policy_id", "trigger_policy_id", "start_time"));
-- create index "trigger_policy_metadata_creation_time_idx" to table: "trigger_policy_metadata"
CREATE INDEX "trigger_policy_metadata_creation_time_idx" ON "trigger_policy_metadata" ("creation_time");
-- create "model" table
CREATE TABLE "model" ("model_name" character varying(16) NOT NULL, "model_years" integer[] NOT NULL, "can_db_version" character varying(32) NOT NULL, "eth_db_version" character varying(32) NOT NULL, "nss_share_capacity" integer NULL, PRIMARY KEY ("model_name", "can_db_version", "eth_db_version"));
-- create "identity_role" table
CREATE TABLE "identity_role" ("platform" character varying(16) NOT NULL, "name" character varying(64) NOT NULL, "description" character varying(256) NULL, "is_predefined" boolean NOT NULL, "is_disabled" boolean NOT NULL, "allowed_actions" character varying(16)[] NOT NULL, "condition" json NULL, "creation_time" timestamptz NOT NULL, "modification_time" timestamptz NOT NULL, PRIMARY KEY ("platform", "name"));
-- create index "identity_role_creation_time_platform_name_idx" to table: "identity_role"
CREATE INDEX "identity_role_creation_time_platform_name_idx" ON "identity_role" ("creation_time", "platform", "name");
-- create index "identity_role_modification_time_platform_name_idx" to table: "identity_role"
CREATE INDEX "identity_role_modification_time_platform_name_idx" ON "identity_role" ("modification_time", "platform", "name");
-- create index "identity_role_name_platform_idx" to table: "identity_role"
CREATE INDEX "identity_role_name_platform_idx" ON "identity_role" ("name", "platform");
-- create "system_share_export" table
CREATE TABLE "system_share_export" ("export_id" character varying(36) NOT NULL, "ip_addr" character varying(16) NOT NULL, "options" text NOT NULL, PRIMARY KEY ("export_id"));
-- create index "system_share_export_ip_addr_options_key" to table: "system_share_export"
CREATE UNIQUE INDEX "system_share_export_ip_addr_options_key" ON "system_share_export" ("ip_addr", "options");
-- create "trigger_condition" table
CREATE TABLE "trigger_condition" ("trigger_condition_id" integer NOT NULL GENERATED ALWAYS AS IDENTITY, "type" integer NOT NULL, "name" text NULL, "operator" character varying(3) NULL, "physical_val" boolean NOT NULL, "value" text NULL, "capture_last_missed_schedule" boolean NULL, "delay" integer NULL, "condition" text NOT NULL, "raw_json" json NOT NULL, PRIMARY KEY ("trigger_condition_id"));
-- create "vin_vehicle_id" table
CREATE TABLE "vin_vehicle_id" ("vin" character varying(64) NOT NULL, "from_time" timestamptz NOT NULL, "vehicle_id" character varying(36) NOT NULL, PRIMARY KEY ("vin", "from_time"));
-- create index "vin_vehicle_id_vehicle_id_key" to table: "vin_vehicle_id"
CREATE UNIQUE INDEX "vin_vehicle_id_vehicle_id_key" ON "vin_vehicle_id" ("vehicle_id");
-- create "nss_stat" table
CREATE TABLE "nss_stat" ("stat_id" character varying(36) NOT NULL, "vehicle_id" character varying(36) NOT NULL, "packets" integer NOT NULL, "packet_udp" integer NOT NULL, "packet_tcp" integer NOT NULL, "packet_tcpcon" integer NOT NULL, "rpc_calls" integer NOT NULL, "rpc_badcalls" integer NOT NULL, "rpc_badfmt" integer NOT NULL, "rpc_badauth" integer NOT NULL, "rpc_badclnt" integer NOT NULL, "io_read" double precision NOT NULL, "io_write" double precision NOT NULL, "system_nfsrunning" boolean NOT NULL, "system_main_volume_operational" boolean NOT NULL, "nvme_node" character varying(16) NOT NULL, "nvme_serial_number" character varying(16) NOT NULL, "nvme_model" character varying(16) NOT NULL, "nvme_namespace_id" character varying(16) NOT NULL, "nvme_firmware_rev" character varying(16) NOT NULL, "nvme_critical_warning" integer NOT NULL, "nvme_temperature" character varying(10) NOT NULL, "nvme_available_spare" character varying(10) NOT NULL, "nvme_available_spare_threshold" character varying(10) NOT NULL, "nvme_percentage_used" character varying(10) NOT NULL, "nvme_endurance_group_critical_warning_summary" integer NOT NULL, "nvme_data_units_read" integer NOT NULL, "nvme_data_units_written" integer NOT NULL, "nvme_host_read_commands" integer NOT NULL, "nvme_host_write_commands" integer NOT NULL, "nvme_controller_busy_time" integer NOT NULL, "nvme_power_cycles" integer NOT NULL, "nvme_power_on_hours" integer NOT NULL, "nvme_unsafe_shutdowns" integer NOT NULL, "nvme_media_errors" integer NOT NULL, "nvme_num_err_log_entries" integer NOT NULL, "nvme_warning_temperature_time" integer NOT NULL, "nvme_critical_composite_temperature_time" integer NOT NULL, "nvme_temperature_sensor1" character varying(10) NOT NULL, "nvme_thermal_management_t1_trans_count" integer NOT NULL, "nvme_thermal_management_t2_trans_count" integer NOT NULL, "nvme_thermal_management_t1_total_time" integer NOT NULL, "nvme_thermal_management_t2_total_time" integer NOT NULL, "raw_data" json NOT NULL, "event_time" timestamptz NOT NULL, "creation_time" timestamptz NULL DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("stat_id"), CONSTRAINT "nss_stat_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "user" table
CREATE TABLE "user" ("user_id" character varying(32) NOT NULL, "first_name" character varying(64) NOT NULL, "last_name" character varying(32) NOT NULL, "email" character varying(120) NULL, "password" character varying(80) NULL, "disabled" boolean NOT NULL, "creation_time" timestamptz NOT NULL, "modification_time" timestamptz NOT NULL, PRIMARY KEY ("user_id"));
-- create "saved_action" table
CREATE TABLE "saved_action" ("name" text NOT NULL, "display_name" text NOT NULL, "model_name" character varying(16) NOT NULL, "can_db_version" character varying(32) NOT NULL, "eth_db_version" character varying(32) NOT NULL, "description" text NULL, "labels" text[] NULL, "created_by" character varying(32) NOT NULL, "creation_time" timestamptz NOT NULL, "last_use_time" timestamptz NOT NULL, "action_type" character varying(32) NOT NULL, "usage_count" integer NOT NULL, "recipe_schema_version" text NOT NULL, "data" text NOT NULL, "disabled" boolean NOT NULL DEFAULT false, "disabled_by" character varying(32) NULL, "disabled_reason" text NULL, PRIMARY KEY ("name"), CONSTRAINT "saved_action_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "user" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "saved_action_disabled_by_fkey" FOREIGN KEY ("disabled_by") REFERENCES "user" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create index "saved_action_data_key" to table: "saved_action"
CREATE UNIQUE INDEX "saved_action_data_key" ON "saved_action" ("data");
-- create "apn" table
CREATE TABLE "apn" ("name" character varying(32) NOT NULL, "model_name" character varying(16) NOT NULL, "tx_field_name" character varying(64) NOT NULL, "rx_field_name" character varying(64) NOT NULL, "created_by" character varying(32) NOT NULL, "creation_time" timestamptz NOT NULL, "modified_by" character varying(32) NULL, "modification_time" timestamptz NULL, PRIMARY KEY ("name", "model_name"), CONSTRAINT "apn_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "user" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "apn_modified_by_fkey" FOREIGN KEY ("modified_by") REFERENCES "user" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create "service_group" table
CREATE TABLE "service_group" ("name" character varying(32) NOT NULL, "apn_name" character varying(32) NULL, "model_name" character varying(16) NOT NULL, "tx_field_name" character varying(64) NOT NULL, "rx_field_name" character varying(64) NOT NULL, "created_by" character varying(32) NOT NULL, "creation_time" timestamptz NOT NULL, "modified_by" character varying(32) NULL, "modification_time" timestamptz NULL, "can_apply_data_cap_policy" boolean NULL DEFAULT false, PRIMARY KEY ("name", "model_name"), CONSTRAINT "service_group_apn_name_model_name_fkey" FOREIGN KEY ("apn_name", "model_name") REFERENCES "apn" ("name", "model_name") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "service_group_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "user" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "service_group_modified_by_fkey" FOREIGN KEY ("modified_by") REFERENCES "user" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create "vehicle" table
CREATE TABLE "vehicle" ("vehicle_id" character varying(36) NOT NULL, "unit" character varying(10) NOT NULL, "brand_name" character varying(16) NOT NULL, "model_name" character varying(16) NULL, "can_db_version" character varying(32) NULL, "eth_db_version" character varying(32) NULL, "engine_type" integer NULL, "online" boolean NULL, "protocol_ids" character varying(40)[] NULL, "disabled" boolean NOT NULL, "creation_time" timestamptz NOT NULL, "modification_time" timestamptz NOT NULL, PRIMARY KEY ("vehicle_id"), CONSTRAINT "vehicle_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create index "vehicle_can_db_version_idx" to table: "vehicle"
CREATE INDEX "vehicle_can_db_version_idx" ON "vehicle" ("can_db_version");
-- create index "vehicle_creation_time_idx" to table: "vehicle"
CREATE INDEX "vehicle_creation_time_idx" ON "vehicle" ("creation_time");
-- create index "vehicle_eth_db_version_idx" to table: "vehicle"
CREATE INDEX "vehicle_eth_db_version_idx" ON "vehicle" ("eth_db_version");
-- create index "vehicle_modification_time_idx" to table: "vehicle"
CREATE INDEX "vehicle_modification_time_idx" ON "vehicle" ("modification_time");
-- create "data_cap_action" table
CREATE TABLE "data_cap_action" ("action_id" character varying(36) NOT NULL, "sg_name" character varying(36) NOT NULL, "threshold" double precision NOT NULL, "persistent_policy_ids" character varying(36)[] NULL, "streaming_policy_ids" character varying(36)[] NULL, PRIMARY KEY ("action_id"));
-- create "vehicle_data_cap_action" table
CREATE TABLE "vehicle_data_cap_action" ("vehicle_id" character varying(36) NOT NULL, "action_id" character varying(36) NOT NULL, "creation_time" timestamptz NOT NULL, PRIMARY KEY ("vehicle_id", "action_id"), CONSTRAINT "vehicle_data_cap_action_action_id_fkey" FOREIGN KEY ("action_id") REFERENCES "data_cap_action" ("action_id") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "vehicle_data_cap_action_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "fleet" table
CREATE TABLE "fleet" ("name" character varying(40) NOT NULL, "type" character varying(32) NOT NULL, "description" character varying(128) NULL, "created_by" character varying(32) NOT NULL, "creation_time" timestamptz NOT NULL, "modification_time" timestamptz NOT NULL, "disabled" boolean NOT NULL, "exclude_vehicle_ids" character varying(36)[] NULL, "use_attributes" boolean NOT NULL, "fleet_names" character varying(40)[] NULL, "engine_type_ids" integer[] NULL, "model_names" character varying(16)[] NULL, "can_db_versions" character varying(32)[] NULL, "eth_db_versions" character varying(32)[] NULL, "tags_operator" character varying(5) NULL, "tags" text[] NULL, PRIMARY KEY ("name"), CONSTRAINT "fleet_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "user" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create index "fleet_name_type_idx" to table: "fleet"
CREATE INDEX "fleet_name_type_idx" ON "fleet" ("name", "type");
-- create "fleet_vehicle_id" table
CREATE TABLE "fleet_vehicle_id" ("fleet_name" character varying(40) NOT NULL, "vehicle_id" character varying(36) NOT NULL, PRIMARY KEY ("fleet_name", "vehicle_id"), CONSTRAINT "fleet_vehicle_id_fleet_name_fkey" FOREIGN KEY ("fleet_name") REFERENCES "fleet" ("name") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "fleet_vehicle_id_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "policy" table
CREATE TABLE "policy" ("policy_id" character varying(36) NOT NULL, "category" character varying(32) NOT NULL, "name" character varying(256) NOT NULL, "use_case_names" character varying(32)[] NULL, "policy_type" character varying(32) NOT NULL, "subtype" character varying(32) NOT NULL, "version" integer NOT NULL, "description" character varying(256) NULL, "disabled" boolean NOT NULL, "disabled_time" timestamptz NULL, "disabled_by" character varying(32) NOT NULL, "disabled_reason" character varying(256) NOT NULL, "model_name" character varying(16) NULL, "model_years" integer[] NULL, "can_db_version" character varying(32) NULL, "eth_db_version" character varying(32) NULL, "engine_type" integer NULL, "created_by" character varying(32) NOT NULL, "creation_time" timestamptz NOT NULL, "signing_state" integer NOT NULL, "encrypted" boolean NOT NULL, "data" json NOT NULL, "raw_data" json NOT NULL, "encrypted_data" text NULL, "data_checksum" character varying(64) NOT NULL, "encrypted_checksum" character varying(64) NOT NULL, "template" boolean NOT NULL DEFAULT false, PRIMARY KEY ("policy_id"), CONSTRAINT "policy_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "user" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create index "policy_name_category_subtype_version_key" to table: "policy"
CREATE UNIQUE INDEX "policy_name_category_subtype_version_key" ON "policy" ("name", "category", "subtype", "version");
-- create "policy_original_data" table
CREATE TABLE "policy_original_data" ("policy_id" character varying(36) NOT NULL, "trigger_condition_ids_map" integer[] NULL, "trigger_policy_ids_map" integer[] NULL, "original_data" json NOT NULL, PRIMARY KEY ("policy_id"), CONSTRAINT "policy_original_data_policy_id_fkey" FOREIGN KEY ("policy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "trigger_policy" table
CREATE TABLE "trigger_policy" ("trigger_policy_id" integer NOT NULL GENERATED ALWAYS AS IDENTITY, "name" character varying(256) NULL, "start_conditions" integer[] NOT NULL, "stop_conditions" integer[] NOT NULL, "expire_conditions_events" integer[] NULL, "expire_conditions_occurrence" integer NULL, "max_starts" integer NULL, "keep_trigger_state" boolean NULL, "raw_json" json NOT NULL, PRIMARY KEY ("trigger_policy_id"));
-- create "vehicle_attributes_capture" table
CREATE TABLE "vehicle_attributes_capture" ("policy_id" character varying(36) NOT NULL, "trigger_policy_id" integer NOT NULL, "value" boolean NOT NULL, PRIMARY KEY ("policy_id", "trigger_policy_id"), CONSTRAINT "vehicle_attributes_capture_policy_id_fkey" FOREIGN KEY ("policy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "vehicle_attributes_capture_trigger_policy_id_fkey" FOREIGN KEY ("trigger_policy_id") REFERENCES "trigger_policy" ("trigger_policy_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create "vehicle_canids_status" table
CREATE TABLE "vehicle_canids_status" ("vehicle_id" character varying(36) NOT NULL, "canids_version" bigint NULL, "analyzer_version" bigint NULL, "ruleset_version" integer NULL, "api_version" bigint NULL, "config_version" bigint NULL, "analyzer_running_state" integer NULL, "individual_algorithm" integer NULL, "event_storming_time" integer NULL, "event_storming_count" integer NULL, "vender_id" character varying(36) NULL, "vin" character varying(64) NULL, "region" bigint NULL, "time_mode" integer NULL, "event_time" timestamptz NOT NULL, "creation_time" timestamptz NOT NULL, CONSTRAINT "vehicle_canids_status_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "vehicle_vcc_stat" table
CREATE TABLE "vehicle_vcc_stat" ("vehicle_id" character varying(36) NOT NULL, "fw_accept_packets" bigint NOT NULL, "fw_accept_bytes" bigint NOT NULL, "fw_drop_packets" bigint NOT NULL, "fw_drop_bytes" bigint NOT NULL, "apn0_tx_packets" bigint NOT NULL, "apn0_tx_bytes" bigint NOT NULL, "apn0_rx_packets" bigint NOT NULL, "apn0_rx_bytes" bigint NOT NULL, "apn1_tx_packets" bigint NOT NULL, "apn1_tx_bytes" bigint NOT NULL, "apn1_rx_packets" bigint NOT NULL, "apn1_rx_bytes" bigint NOT NULL, "apn2_tx_packets" bigint NOT NULL, "apn2_tx_bytes" bigint NOT NULL, "apn2_rx_packets" bigint NOT NULL, "apn2_rx_bytes" bigint NOT NULL, "apn3_tx_packets" bigint NOT NULL, "apn3_tx_bytes" bigint NOT NULL, "apn3_rx_packets" bigint NOT NULL, "apn3_rx_bytes" bigint NOT NULL, "sg_default_tx_packets" bigint NOT NULL, "sg_default_tx_bytes" bigint NOT NULL, "sg_default_rx_packets" bigint NOT NULL, "sg_default_rx_bytes" bigint NOT NULL, "sg_ccs_tx_packets" bigint NOT NULL, "sg_ccs_tx_bytes" bigint NOT NULL, "sg_ccs_rx_packets" bigint NOT NULL, "sg_ccs_rx_bytes" bigint NOT NULL, "sg_fota_tx_packets" bigint NOT NULL, "sg_fota_tx_bytes" bigint NOT NULL, "sg_fota_rx_packets" bigint NOT NULL, "sg_fota_rx_bytes" bigint NOT NULL, "sg_userpaid_tx_packets" bigint NOT NULL, "sg_userpaid_tx_bytes" bigint NOT NULL, "sg_userpaid_rx_packets" bigint NOT NULL, "sg_userpaid_rx_bytes" bigint NOT NULL, "sg_oempaid_tx_packets" bigint NOT NULL, "sg_oempaid_tx_bytes" bigint NOT NULL, "sg_oempaid_rx_packets" bigint NOT NULL, "sg_oempaid_rx_bytes" bigint NOT NULL, "sg_vcrm_tx_packets" bigint NOT NULL, "sg_vcrm_tx_bytes" bigint NOT NULL, "sg_vcrm_rx_packets" bigint NOT NULL, "sg_vcrm_rx_bytes" bigint NOT NULL, "sg_canids_tx_packets" bigint NOT NULL, "sg_canids_tx_bytes" bigint NOT NULL, "sg_canids_rx_packets" bigint NOT NULL, "sg_canids_rx_bytes" bigint NOT NULL, "rollover" boolean NULL DEFAULT false, "event_time" timestamptz NOT NULL, PRIMARY KEY ("vehicle_id", "event_time"), CONSTRAINT "vehicle_vcc_stat_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "vehicle_security_incident" table
CREATE TABLE "vehicle_security_incident" ("incident_id" character varying(36) NOT NULL, "attack_id" character varying(64) NOT NULL, "ids_service" character varying(10) NOT NULL, "ids_severity" character varying(10) NOT NULL, "user_severity" character varying(10) NULL, "last_event_time" timestamptz NULL, "region" character varying(20) NULL, "category" character varying(10) NOT NULL, "event_count" integer NOT NULL, "action_ids" character varying(36)[] NULL, "tags" text[] NULL, "responded_by" character varying(32) NULL, "packets_blocked" integer NULL, "modification_time" timestamptz NULL, "creation_time" timestamptz NOT NULL, PRIMARY KEY ("incident_id"), CONSTRAINT "vehicle_security_incident_responded_by_fkey" FOREIGN KEY ("responded_by") REFERENCES "user" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create "incident_comment" table
CREATE TABLE "incident_comment" ("comment_id" character varying(36) NOT NULL, "incident_id" character varying(36) NOT NULL, "commenter" character varying(32) NOT NULL, "creation_time" timestamptz NOT NULL, "comment" text NOT NULL, PRIMARY KEY ("comment_id"), CONSTRAINT "incident_comment_commenter_fkey" FOREIGN KEY ("commenter") REFERENCES "user" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "incident_comment_incident_id_fkey" FOREIGN KEY ("incident_id") REFERENCES "vehicle_security_incident" ("incident_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "policy_submission" table
CREATE TABLE "policy_submission" ("submission_id" character varying(36) NOT NULL, "apply_policy_ids" character varying(36)[] NULL, "unapply_policy_ids" character varying(36)[] NULL, "submit_time" timestamptz NOT NULL, "submitted_by" character varying(32) NOT NULL, "schedule_time" timestamptz NULL, "state" character varying(36) NOT NULL, "encrypted" boolean NOT NULL, "error_msg" character varying(512) NULL, "vehicle_filter_id" character varying(36) NOT NULL, PRIMARY KEY ("submission_id"), CONSTRAINT "policy_submission_submitted_by_fkey" FOREIGN KEY ("submitted_by") REFERENCES "user" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "policy_submission_vehicle_filter_id_fkey" FOREIGN KEY ("vehicle_filter_id") REFERENCES "fleet" ("name") ON UPDATE CASCADE ON DELETE CASCADE);
-- create "policy_deployment" table
CREATE TABLE "policy_deployment" ("deployment_id" character varying(36) NOT NULL, "submission_id" character varying(36) NULL, "policy_id" character varying(36) NOT NULL, "deploy_time" timestamptz NULL, "deployed_by" character varying(32) NULL, "state" character varying(36) NOT NULL, "description" character varying(256) NULL, "vehicle_filter_id" character varying(36) NOT NULL, PRIMARY KEY ("deployment_id"), CONSTRAINT "policy_deployment_deployed_by_fkey" FOREIGN KEY ("deployed_by") REFERENCES "user" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "policy_deployment_policy_id_fkey" FOREIGN KEY ("policy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "policy_deployment_submission_id_fkey" FOREIGN KEY ("submission_id") REFERENCES "policy_submission" ("submission_id") ON UPDATE CASCADE ON DELETE CASCADE, CONSTRAINT "policy_deployment_vehicle_filter_id_fkey" FOREIGN KEY ("vehicle_filter_id") REFERENCES "fleet" ("name") ON UPDATE CASCADE ON DELETE CASCADE);
-- create "recipe_update_event" table
CREATE TABLE "recipe_update_event" ("vehicle_id" character varying(36) NOT NULL, "event_time" timestamptz NOT NULL, "prev_recipe_name" text NULL, "prev_recipe_version" integer NULL, "current_recipe_name" text NULL, "current_recipe_version" integer NULL, CONSTRAINT "recipe_update_event_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "software_version" table
CREATE TABLE "software_version" ("vehicle_id" character varying(36) NOT NULL, "model" character varying(16) NOT NULL, "app" character varying(32) NOT NULL, "version" character varying(16) NOT NULL, "modification_time" timestamptz NULL, PRIMARY KEY ("vehicle_id", "model", "app"), CONSTRAINT "software_version_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "source_subpolicy" table
CREATE TABLE "source_subpolicy" ("policy_id" character varying(36) NOT NULL, "data_id" character varying(32) NOT NULL, "subpolicy_ids" character varying(36)[] NULL, PRIMARY KEY ("policy_id", "data_id"), CONSTRAINT "source_subpolicy_policy_id_fkey" FOREIGN KEY ("policy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "vehicle_attribute" table
CREATE TABLE "vehicle_attribute" ("vehicle_id" character varying(36) NOT NULL, "name" character varying(32) NOT NULL, "value" character varying(64) NOT NULL, PRIMARY KEY ("vehicle_id", "name"), CONSTRAINT "vehicle_attribute_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create index "vehicle_attribute_name_idx" to table: "vehicle_attribute"
CREATE INDEX "vehicle_attribute_name_idx" ON "vehicle_attribute" ("name");
-- create index "vehicle_attribute_value_idx" to table: "vehicle_attribute"
CREATE INDEX "vehicle_attribute_value_idx" ON "vehicle_attribute" ("value");
-- create "vehicle_dns_entry" table
CREATE TABLE "vehicle_dns_entry" ("entry_id" character varying(36) NOT NULL, "request_id" character varying(36) NULL, "vehicle_id" character varying(36) NOT NULL, "incident_id" character varying(36) NULL, "client_id" character varying(36) NULL, "domain_name" character varying(255) NOT NULL, "resolved_time" timestamptz NULL, "resolved_ipv4" character varying(16) NULL, "resolved_ipv6" character varying(32) NULL, "event_time" timestamptz NOT NULL, "creation_time" timestamptz NOT NULL, PRIMARY KEY ("entry_id"), CONSTRAINT "vehicle_dns_entry_incident_id_fkey" FOREIGN KEY ("incident_id") REFERENCES "vehicle_security_incident" ("incident_id") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "vehicle_dns_entry_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create index "vehicle_dns_entry_vehicle_id_request_id_domain_name_event_t_idx" to table: "vehicle_dns_entry"
CREATE INDEX "vehicle_dns_entry_vehicle_id_request_id_domain_name_event_t_idx" ON "vehicle_dns_entry" ("vehicle_id", "request_id", "domain_name", "event_time");
-- create "vehicle_network_flow_entry" table
CREATE TABLE "vehicle_network_flow_entry" ("netflow_id" character varying(36) NOT NULL, "vehicle_id" character varying(36) NOT NULL, "src_mac_addr" character varying(128) NULL, "src_ipv4" character varying(32) NULL, "src_ipv6" character varying(64) NULL, "src_port" integer NULL, "dst_mac_addr" character varying(128) NULL, "dst_ipv4" character varying(32) NULL, "dst_ipv6" character varying(64) NULL, "dst_port" integer NULL, "protocol" character varying(16) NULL, "event_time" timestamptz NOT NULL, "creation_time" timestamptz NOT NULL, "tags" text[] NULL, PRIMARY KEY ("netflow_id"), CONSTRAINT "vehicle_network_flow_entry_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create index "vehicle_network_flow_entry_vehicle_id_netflow_id_event_time_key" to table: "vehicle_network_flow_entry"
CREATE UNIQUE INDEX "vehicle_network_flow_entry_vehicle_id_netflow_id_event_time_key" ON "vehicle_network_flow_entry" ("vehicle_id", "netflow_id", "event_time");
-- create "block_ips" table
CREATE TABLE "block_ips" ("vehicle_id" character varying(36) NOT NULL, "block_ips" character varying(32)[] NULL, PRIMARY KEY ("vehicle_id"), CONSTRAINT "block_ips_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "cmd_capture" table
CREATE TABLE "cmd_capture" ("policy_id" character varying(36) NOT NULL, "trigger_policy_id" integer NOT NULL, "ls" character varying(20)[] NOT NULL, PRIMARY KEY ("policy_id", "trigger_policy_id"), CONSTRAINT "cmd_capture_policy_id_fkey" FOREIGN KEY ("policy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "cmd_capture_trigger_policy_id_fkey" FOREIGN KEY ("trigger_policy_id") REFERENCES "trigger_policy" ("trigger_policy_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create "data_cap_config" table
CREATE TABLE "data_cap_config" ("config_id" character varying(36) NOT NULL, "name" character varying(64) NOT NULL, "version" integer NOT NULL, "data_limit" integer NOT NULL, "model_name" character varying(16) NOT NULL, "action_ids" character varying(36)[] NOT NULL, "created_by" character varying(32) NOT NULL, "creation_time" timestamptz NOT NULL, "disabled" boolean NULL DEFAULT false, "disabled_by" character varying(32) NULL, "enabled_by" character varying(32) NULL, "modification_time" timestamptz NULL, PRIMARY KEY ("config_id"), CONSTRAINT "data_cap_config_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "user" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "data_cap_config_disabled_by_fkey" FOREIGN KEY ("disabled_by") REFERENCES "user" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "data_cap_config_enabled_by_fkey" FOREIGN KEY ("enabled_by") REFERENCES "user" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create index "data_cap_config_name_version_key" to table: "data_cap_config"
CREATE UNIQUE INDEX "data_cap_config_name_version_key" ON "data_cap_config" ("name", "version");
-- create "merged_policy_subpolicy" table
CREATE TABLE "merged_policy_subpolicy" ("policy_id" character varying(36) NOT NULL, "subpolicy_id" character varying(36) NOT NULL, PRIMARY KEY ("policy_id", "subpolicy_id"), CONSTRAINT "merged_policy_subpolicy_policy_id_fkey" FOREIGN KEY ("policy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "merged_policy_subpolicy_subpolicy_id_fkey" FOREIGN KEY ("subpolicy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "model_db" table
CREATE TABLE "model_db" ("model_name" character varying(16) NOT NULL, "db_type" character varying(16) NOT NULL, "version" character varying(32) NOT NULL, "name" character varying(32) NOT NULL, "data" text NOT NULL, PRIMARY KEY ("model_name", "db_type", "version"));
-- create "model_db_signal" table
CREATE TABLE "model_db_signal" ("model_name" character varying(16) NOT NULL, "db_type" character varying(16) NOT NULL, "version" character varying(32) NOT NULL, "signal_name" text NOT NULL, "sig_id" integer NOT NULL, "msg_name" text NOT NULL, "factor" double precision NOT NULL, "signal_offset" double precision NOT NULL, PRIMARY KEY ("model_name", "db_type", "version", "signal_name"), CONSTRAINT "model_db_signal_model_name_db_type_version_fkey" FOREIGN KEY ("model_name", "db_type", "version") REFERENCES "model_db" ("model_name", "db_type", "version") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create "policy_data" table
CREATE TABLE "policy_data" ("policy_id" character varying(36) NOT NULL, "trigger_condition_ids" integer[] NULL, "trigger_policy_ids" integer[] NULL, "apply_immediately" boolean NOT NULL, "transition_condition_reset_delay" integer NULL, "engineering_mode_enable_ota" boolean NULL, PRIMARY KEY ("policy_id"), CONSTRAINT "policy_data_policy_id_fkey" FOREIGN KEY ("policy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "ecu_diagnostics_capture" table
CREATE TABLE "ecu_diagnostics_capture" ("policy_id" character varying(36) NOT NULL, "trigger_policy_id" integer NOT NULL, "max_retries" integer NOT NULL, "retry_interval" integer NOT NULL, "uds" text NOT NULL, "loop_count" integer NOT NULL, "sample_interval" integer NULL, PRIMARY KEY ("policy_id", "trigger_policy_id"), CONSTRAINT "ecu_diagnostics_capture_policy_id_fkey" FOREIGN KEY ("policy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "ecu_diagnostics_capture_trigger_policy_id_fkey" FOREIGN KEY ("trigger_policy_id") REFERENCES "trigger_policy" ("trigger_policy_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create "vehicle_cloud_ids_event" table
CREATE TABLE "vehicle_cloud_ids_event" ("event_id" character varying(36) NOT NULL, "vehicle_id" character varying(36) NOT NULL, "attack_id" character varying(36) NOT NULL, "description" text NULL, "event_type" character varying(20) NOT NULL, "dns_entry_id" character varying(36) NULL, "netflow_id" character varying(36) NULL, "event_time" timestamptz NOT NULL, "creation_time" timestamptz NOT NULL, PRIMARY KEY ("event_id"), CONSTRAINT "vehicle_cloud_ids_event_dns_entry_id_fkey" FOREIGN KEY ("dns_entry_id") REFERENCES "vehicle_dns_entry" ("entry_id") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "vehicle_cloud_ids_event_netflow_id_fkey" FOREIGN KEY ("netflow_id") REFERENCES "vehicle_network_flow_entry" ("netflow_id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "vehicle_cloud_ids_event_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create index "vehicle_cloud_ids_event_vehicle_id_attack_id_event_time_idx" to table: "vehicle_cloud_ids_event"
CREATE INDEX "vehicle_cloud_ids_event_vehicle_id_attack_id_event_time_idx" ON "vehicle_cloud_ids_event" ("vehicle_id", "attack_id", "event_time");
-- create "can_msgs_capture" table
CREATE TABLE "can_msgs_capture" ("policy_id" character varying(36) NOT NULL, "trigger_policy_id" integer NOT NULL, "names" text[] NOT NULL, "sample_interval" integer NOT NULL, "duration_before_start" integer NULL, PRIMARY KEY ("policy_id", "trigger_policy_id"), CONSTRAINT "can_msgs_capture_policy_id_fkey" FOREIGN KEY ("policy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "can_msgs_capture_trigger_policy_id_fkey" FOREIGN KEY ("trigger_policy_id") REFERENCES "trigger_policy" ("trigger_policy_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create "transmission_policy" table
CREATE TABLE "transmission_policy" ("policy_id" character varying(36) NOT NULL, "compress" boolean NULL, "transmission_interval" integer NOT NULL, "retry_interval" integer NULL, "max_retries" integer NULL, "path" text NOT NULL, "raw_json" json NOT NULL, PRIMARY KEY ("policy_id"), CONSTRAINT "transmission_policy_policy_id_fkey" FOREIGN KEY ("policy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "vehicle_canids_stats" table
CREATE TABLE "vehicle_canids_stats" ("vehicle_id" character varying(36) NOT NULL, "attack_ids" character varying(36)[] NULL, "eids_eth_pkts" bigint NULL, "eids_eth_bytes" bigint NULL, "eids_dup_pkts" bigint NULL, "eids_dup_bytes" bigint NULL, "eids_nonip_pkts" bigint NULL, "eids_nonip_bytes" bigint NULL, "eids_ip_pkts" bigint NULL, "eids_ip_bytes" bigint NULL, "eids_tcp_pkts" bigint NULL, "eids_tcp_bytes" bigint NULL, "eids_udp_pkts" bigint NULL, "eids_udp_bytes" bigint NULL, "eids_icmp_pkts" bigint NULL, "eids_icmp_bytes" bigint NULL, "vsoc_api_update_version" integer NULL, "vsoc_api_get_config" integer NULL, "vsoc_api_get_status" integer NULL, "vsoc_api_update_stats" integer NULL, "vsoc_api_get_stats" integer NULL, "vsoc_api_get_ruleset" integer NULL, "vsoc_api_get_alert_log_list" integer NULL, "vsoc_api_get_alert_log" integer NULL, "vsoc_api_update_alert" integer NULL, "vsoc_api_get_pcap_list" integer NULL, "vsoc_api_get_pcap_log" integer NULL, "event_time" timestamptz NOT NULL, "creation_time" timestamptz NOT NULL, CONSTRAINT "vehicle_canids_stats_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create index "vehicle_canids_stats_vehicle_id_event_time_idx" to table: "vehicle_canids_stats"
CREATE INDEX "vehicle_canids_stats_vehicle_id_event_time_idx" ON "vehicle_canids_stats" ("vehicle_id", "event_time");
-- create "vehicle_scheduled_policy_deployment" table
CREATE TABLE "vehicle_scheduled_policy_deployment" ("vehicle_id" character varying(36) NOT NULL, "policy_id" character varying(36) NOT NULL, "category" character varying(32) NOT NULL, "subtype" character varying(32) NOT NULL, "deployment_id" character varying(36) NOT NULL, "schedule_time" timestamptz NOT NULL, PRIMARY KEY ("vehicle_id", "category", "subtype", "schedule_time"), CONSTRAINT "vehicle_scheduled_policy_deployment_deployment_id_fkey" FOREIGN KEY ("deployment_id") REFERENCES "policy_deployment" ("deployment_id") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "vehicle_scheduled_policy_deployment_policy_id_fkey" FOREIGN KEY ("policy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "vehicle_scheduled_policy_deployment_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "vehicle_states" table
CREATE TABLE "vehicle_states" ("vehicle_id" character varying(36) NOT NULL, "states" character varying(32)[] NOT NULL, "creation_time" timestamptz NOT NULL, PRIMARY KEY ("vehicle_id", "creation_time"), CONSTRAINT "vehicle_states_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "eth_stat_capture" table
CREATE TABLE "eth_stat_capture" ("policy_id" character varying(36) NOT NULL, "trigger_policy_id" integer NOT NULL, "switch_stats" text NOT NULL, "sample_interval" integer NOT NULL, PRIMARY KEY ("policy_id", "trigger_policy_id"), CONSTRAINT "eth_stat_capture_policy_id_fkey" FOREIGN KEY ("policy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "eth_stat_capture_trigger_policy_id_fkey" FOREIGN KEY ("trigger_policy_id") REFERENCES "trigger_policy" ("trigger_policy_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create "recipe" table
CREATE TABLE "recipe" ("policy_id" character varying(36) NOT NULL, "apply_immediately" boolean NOT NULL, "status_updates_endpoint" text NULL, "variables" text[] NULL, "constants" text[] NULL, "workflows" text[] NULL, "workflow_descriptions" text[] NULL, "trigger_conditions" text[] NULL, "tasks" text[] NULL, "actions" text[] NULL, "action_descriptions" text[] NULL, "use_case" character varying(32) NOT NULL DEFAULT 'RECIPE', PRIMARY KEY ("policy_id"), CONSTRAINT "recipe_policy_id_fkey" FOREIGN KEY ("policy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "workflow_run" table
CREATE TABLE "workflow_run" ("vehicle_id" character varying(36) NOT NULL, "recipe_id" character varying(36) NOT NULL, "workflow_name" text NOT NULL, "start_time" timestamptz NOT NULL, "run_id" integer NOT NULL, "ended" boolean NOT NULL, "last_time" timestamptz NOT NULL, "success" boolean NULL, "reached_failure_task" boolean NOT NULL, PRIMARY KEY ("vehicle_id", "recipe_id", "workflow_name", "start_time"), CONSTRAINT "workflow_run_recipe_id_fkey" FOREIGN KEY ("recipe_id") REFERENCES "recipe" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "workflow_run_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create index "workflow_run_vehicle_id_recipe_id_workflow_name_run_id_key" to table: "workflow_run"
CREATE UNIQUE INDEX "workflow_run_vehicle_id_recipe_id_workflow_name_run_id_key" ON "workflow_run" ("vehicle_id", "recipe_id", "workflow_name", "run_id");
-- create "workflow_template" table
CREATE TABLE "workflow_template" ("name" character varying(256) NOT NULL, "categories" character varying(32)[] NULL, "description" character varying(256) NULL, "data" text NOT NULL, "thumbnail" text NULL, "created_by" character varying(32) NOT NULL, "creation_time" timestamptz NOT NULL, "disabled" boolean NOT NULL DEFAULT false, "disabled_by" character varying(32) NULL, "disabled_reason" text NULL, PRIMARY KEY ("name"), CONSTRAINT "workflow_template_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "user" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "workflow_template_disabled_by_fkey" FOREIGN KEY ("disabled_by") REFERENCES "user" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create "signals_capture" table
CREATE TABLE "signals_capture" ("policy_id" character varying(36) NOT NULL, "trigger_policy_id" integer NOT NULL, "names" text[] NOT NULL, "sample_interval" integer NOT NULL, "duration_before_start" integer NULL, PRIMARY KEY ("policy_id", "trigger_policy_id"), CONSTRAINT "signals_capture_policy_id_fkey" FOREIGN KEY ("policy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "signals_capture_trigger_policy_id_fkey" FOREIGN KEY ("trigger_policy_id") REFERENCES "trigger_policy" ("trigger_policy_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create "vehicle_eth_stat" table
CREATE TABLE "vehicle_eth_stat" ("vehicle_id" character varying(36) NOT NULL, "switch_id" integer NOT NULL, "zone_id" integer NOT NULL, "port_id" integer NOT NULL, "tx_bytes_counter" bigint NOT NULL, "tx_drop_packet_counter" integer NOT NULL, "tx_broadcast_packet_counter" integer NOT NULL, "tx_q0_packet_counter" integer NOT NULL, "tx_multicast_packet_counter" integer NOT NULL, "tx_unicast_packet_counter" integer NOT NULL, "tx_collision_counter" integer NOT NULL, "tx_single_collision_counter" integer NOT NULL, "tx_multiple_collision_counter" integer NOT NULL, "tx_deferred_transmit_counter" integer NOT NULL, "tx_late_collision_counter" integer NOT NULL, "tx_excessive_collision_counter" integer NOT NULL, "tx_frame_in_disc_counter" integer NOT NULL, "tx_pause_packet_counter" integer NOT NULL, "tx_q1_packet_counter" integer NOT NULL, "tx_q2_packet_counter" integer NOT NULL, "tx_q3_packet_counter" integer NOT NULL, "tx_q4_packet_counter" integer NOT NULL, "tx_q5_packet_counter" integer NOT NULL, "rx_bytes_counter" bigint NOT NULL, "rx_under_size_packet_counter" integer NOT NULL, "rx_pause_packet_counter" integer NOT NULL, "rx_64_bytes_counter" integer NOT NULL, "rx_65_to_127_bytes_counter" integer NOT NULL, "rx_128_to_255_bytes_counter" integer NOT NULL, "rx_256_to_511_bytes_counter" integer NOT NULL, "rx_512_to_1023_bytes_counter" integer NOT NULL, "rx_1024_to_max_bytes_counter" integer NOT NULL, "rx_over_size_packet_counter" integer NOT NULL, "rx_jabber_packet_counter" integer NOT NULL, "rx_alignment_error_counter" integer NOT NULL, "rx_fcs_error_counter" integer NOT NULL, "rx_good_packet_counter" bigint NOT NULL, "rx_drop_packet_counter" integer NOT NULL, "rx_unicast_packet_counter" integer NOT NULL, "rx_multicast_packet_counter" integer NOT NULL, "rx_broadcast_packet_counter" integer NOT NULL, "rx_sa_change_counter" integer NOT NULL, "rx_fragment_counter" integer NOT NULL, "jumbo_packet_counter" integer NOT NULL, "rx_symbol_error_counter" integer NOT NULL, "in_range_error_counter" integer NOT NULL, "out_range_error_counter" integer NOT NULL, "rx_discard_counter" integer NOT NULL, "tx_q6_packet_counter" integer NOT NULL, "tx_q7_packet_counter" integer NOT NULL, "tx_64_bytes_counter" integer NOT NULL, "tx_65_to_127_bytes_counter" integer NOT NULL, "tx_128_to_255_bytes_counter" integer NOT NULL, "tx_256_to_511_bytes_counter" integer NOT NULL, "tx_512_to_1023_bytes_counter" integer NOT NULL, "tx_1024_to_max_bytes_counter" integer NOT NULL, "link_state" integer NOT NULL, "event_time" timestamptz NOT NULL, PRIMARY KEY ("vehicle_id", "switch_id", "zone_id", "port_id", "event_time"), CONSTRAINT "vehicle_eth_stat_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "vehicle_status_capture" table
CREATE TABLE "vehicle_status_capture" ("policy_id" character varying(36) NOT NULL, "trigger_policy_id" integer NOT NULL, "names" text[] NOT NULL, PRIMARY KEY ("policy_id", "trigger_policy_id"), CONSTRAINT "vehicle_status_capture_policy_id_fkey" FOREIGN KEY ("policy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "vehicle_status_capture_trigger_policy_id_fkey" FOREIGN KEY ("trigger_policy_id") REFERENCES "trigger_policy" ("trigger_policy_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create "location_capture" table
CREATE TABLE "location_capture" ("policy_id" character varying(36) NOT NULL, "trigger_policy_id" integer NOT NULL, "sample_interval" integer NOT NULL, "duration_before_start" integer NULL, PRIMARY KEY ("policy_id", "trigger_policy_id"), CONSTRAINT "location_capture_policy_id_fkey" FOREIGN KEY ("policy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "location_capture_trigger_policy_id_fkey" FOREIGN KEY ("trigger_policy_id") REFERENCES "trigger_policy" ("trigger_policy_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create "nss_client_stat" table
CREATE TABLE "nss_client_stat" ("client_id" character varying(36) NOT NULL, "stat_id" character varying(36) NOT NULL, "client_ip" character varying(16) NOT NULL, "share" character varying(32) NOT NULL, "mount_point" character varying(32) NOT NULL, "ops_per_s" double precision NOT NULL, "rpc_bklog" double precision NOT NULL, "read_ops_per_s" double precision NOT NULL, "read_kb_per_s" double precision NOT NULL, "read_kb_per_op" double precision NOT NULL, "read_retrans" character varying(10) NOT NULL, "read_avg_rt_tin_ms" double precision NOT NULL, "read_avg_exe_in_ms" double precision NOT NULL, "write_ops_per_s" double precision NOT NULL, "write_kb_per_s" double precision NOT NULL, "write_kb_per_op" double precision NOT NULL, "write_retrans" character varying(10) NOT NULL, "write_avg_rt_tin_ms" double precision NOT NULL, "write_avg_exein_ms" double precision NOT NULL, PRIMARY KEY ("client_id"), CONSTRAINT "nss_client_stat_stat_id_fkey" FOREIGN KEY ("stat_id") REFERENCES "nss_stat" ("stat_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create index "nss_client_stat_stat_id_idx" to table: "nss_client_stat"
CREATE INDEX "nss_client_stat_stat_id_idx" ON "nss_client_stat" ("stat_id");
-- create "translation_rule" table
CREATE TABLE "translation_rule" ("model_name" character varying(16) NOT NULL, "can_db_version" character varying(32) NOT NULL, "eth_db_version" character varying(32) NOT NULL, "engine_type_id" integer NOT NULL, "translation_name" character varying(128) NOT NULL, "raw_name" character varying(128) NOT NULL, "soa_name" character varying(128) NULL, "actuator" boolean NOT NULL, "type" character varying(16) NULL, "unit" character varying(16) NULL, "created_by" character varying(32) NOT NULL, "creation_time" timestamptz NOT NULL, PRIMARY KEY ("model_name", "can_db_version", "eth_db_version", "engine_type_id", "translation_name"), CONSTRAINT "translation_rule_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "user" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create index "translation_rule_model_name_can_db_version_eth_db_version__key1" to table: "translation_rule"
CREATE UNIQUE INDEX "translation_rule_model_name_can_db_version_eth_db_version__key1" ON "translation_rule" ("model_name", "can_db_version", "eth_db_version", "engine_type_id", "soa_name");
-- create index "translation_rule_model_name_can_db_version_eth_db_version_e_key" to table: "translation_rule"
CREATE UNIQUE INDEX "translation_rule_model_name_can_db_version_eth_db_version_e_key" ON "translation_rule" ("model_name", "can_db_version", "eth_db_version", "engine_type_id", "raw_name");
-- create "vehicle_eids_stats" table
CREATE TABLE "vehicle_eids_stats" ("vehicle_id" character varying(36) NOT NULL, "attack_ids" character varying(36)[] NULL, "eids_eth_pkts" bigint NULL, "eids_eth_bytes" bigint NULL, "eids_dup_pkts" bigint NULL, "eids_dup_bytes" bigint NULL, "eids_nonip_pkts" bigint NULL, "eids_nonip_bytes" bigint NULL, "eids_ip_pkts" bigint NULL, "eids_ip_bytes" bigint NULL, "eids_tcp_pkts" bigint NULL, "eids_tcp_bytes" bigint NULL, "eids_udp_pkts" bigint NULL, "eids_udp_bytes" bigint NULL, "eids_icmp_pkts" bigint NULL, "eids_icmp_bytes" bigint NULL, "vsoc_api_update_version" integer NULL, "vsoc_api_get_config" integer NULL, "vsoc_api_get_status" integer NULL, "vsoc_api_update_stats" integer NULL, "vsoc_api_get_stats" integer NULL, "vsoc_api_get_ruleset" integer NULL, "vsoc_api_get_alert_log_list" integer NULL, "vsoc_api_get_alert_log" integer NULL, "vsoc_api_update_alert" integer NULL, "vsoc_api_get_pcap_list" integer NULL, "vsoc_api_api_pcap_log" integer NULL, "event_time" timestamptz NOT NULL, "creation_time" timestamptz NOT NULL, CONSTRAINT "vehicle_eids_stats_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "recipe_execution_event" table
CREATE TABLE "recipe_execution_event" ("vehicle_id" character varying(36) NOT NULL, "recipe_name" character varying(256) NOT NULL, "recipe_version" integer NOT NULL, "event_time" timestamptz NOT NULL, "workflow_name" text NULL, "workflow_state" text NULL, "workflow_start" boolean NULL, "task_name" text NULL, "action_name" text NULL, "action_success" boolean NULL, CONSTRAINT "recipe_execution_event_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "vehicle_canids_event" table
CREATE TABLE "vehicle_canids_event" ("event_id" character varying(36) NOT NULL, "vehicle_id" character varying(36) NOT NULL, "attack_id" character varying(36) NOT NULL, "bus_id" character varying(10) NOT NULL, "ca_data" text NULL, "can_id" integer NULL, "info" text NULL, "is_can_fd" integer NULL, "rule_id" integer NULL, "signal_id" integer NULL, "can_dlc" character varying(10) NULL, "event_time" timestamptz NOT NULL, "creation_time" timestamptz NOT NULL, PRIMARY KEY ("event_id"), CONSTRAINT "vehicle_canids_event_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create index "vehicle_canids_event_vehicle_id_attack_id_event_time_idx" to table: "vehicle_canids_event"
CREATE INDEX "vehicle_canids_event_vehicle_id_attack_id_event_time_idx" ON "vehicle_canids_event" ("vehicle_id", "attack_id", "event_time");
-- create "media_events_capture" table
CREATE TABLE "media_events_capture" ("policy_id" character varying(36) NOT NULL, "trigger_policy_id" integer NOT NULL, "targets" text NOT NULL, "duration_before_start" integer NULL, PRIMARY KEY ("policy_id", "trigger_policy_id"), CONSTRAINT "media_events_capture_policy_id_fkey" FOREIGN KEY ("policy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "media_events_capture_trigger_policy_id_fkey" FOREIGN KEY ("trigger_policy_id") REFERENCES "trigger_policy" ("trigger_policy_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create "vehicle_policy_status" table
CREATE TABLE "vehicle_policy_status" ("vehicle_id" character varying(36) NOT NULL, "policy_id" character varying(36) NOT NULL, "deployment_id" character varying(36) NULL, "status_update_time" timestamptz NULL, "policy_name" character varying(256) NOT NULL, "category" character varying(32) NOT NULL, "subtype" character varying(32) NOT NULL, "downloaded_version" integer NULL, "installed_version" integer NULL, "applied_version" integer NULL, "status" character varying(64) NULL, "state" character varying(64) NOT NULL, "error_msg" character varying(512) NULL, "step" character varying(32) NULL, "creation_time" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("vehicle_id", "policy_id", "creation_time", "state"), CONSTRAINT "vehicle_policy_status_deployment_id_fkey" FOREIGN KEY ("deployment_id") REFERENCES "policy_deployment" ("deployment_id") ON UPDATE CASCADE ON DELETE CASCADE, CONSTRAINT "vehicle_policy_status_policy_id_fkey" FOREIGN KEY ("policy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "vehicle_policy_status_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create index "vehicle_policy_status_vehicle_id_deployment_id_creation_tim_idx" to table: "vehicle_policy_status"
CREATE INDEX "vehicle_policy_status_vehicle_id_deployment_id_creation_tim_idx" ON "vehicle_policy_status" ("vehicle_id", "deployment_id", "creation_time" DESC);
-- create "files_capture" table
CREATE TABLE "files_capture" ("policy_id" character varying(36) NOT NULL, "trigger_policy_id" integer NOT NULL, "file_paths" text[] NULL, "directory_paths" text[] NULL, "wildcards" text[] NULL, "sample_interval" integer NOT NULL, PRIMARY KEY ("policy_id", "trigger_policy_id"), CONSTRAINT "files_capture_policy_id_fkey" FOREIGN KEY ("policy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "files_capture_trigger_policy_id_fkey" FOREIGN KEY ("trigger_policy_id") REFERENCES "trigger_policy" ("trigger_policy_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create "log_filtering" table
CREATE TABLE "log_filtering" ("log_filtering_id" character varying(36) NOT NULL, "vehicle_id" character varying(36) NOT NULL, "file_types" character varying(10)[] NOT NULL, "from_time" timestamptz NULL, "to_time" timestamptz NULL, "file_ids_to_capture" character varying(36)[] NULL, "max_wait_time" integer NOT NULL, "created_by" character varying(256) NOT NULL, "file_attribute_policy_id" character varying(36) NULL, "file_capture_policy_id" character varying(36) NULL, "file_names_captured" character varying(256)[] NULL, "num_files_expected" integer NULL, "total_captured_file_size" integer NULL, "on_vehicle_file_ids" character varying(36)[] NULL, "processed_file_ids" character varying(36)[] NULL, "captured_file_ids" character varying(36)[] NULL, "app_ids" character varying(10)[] NULL, "state" integer NULL, "error_msg" character varying(512) NULL, "file_capture_time" timestamptz NULL, "creation_time" timestamptz NOT NULL, PRIMARY KEY ("log_filtering_id"), CONSTRAINT "log_filtering_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "user" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "log_filtering_file_attribute_policy_id_fkey" FOREIGN KEY ("file_attribute_policy_id") REFERENCES "policy" ("policy_id") ON UPDATE CASCADE ON DELETE CASCADE, CONSTRAINT "log_filtering_file_capture_policy_id_fkey" FOREIGN KEY ("file_capture_policy_id") REFERENCES "policy" ("policy_id") ON UPDATE CASCADE ON DELETE CASCADE, CONSTRAINT "log_filtering_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "saved_trigger_condition" table
CREATE TABLE "saved_trigger_condition" ("name" text NOT NULL, "display_name" text NOT NULL, "model_name" character varying(16) NOT NULL, "can_db_version" character varying(32) NOT NULL, "eth_db_version" character varying(32) NOT NULL, "description" text NULL, "labels" text[] NULL, "created_by" character varying(32) NOT NULL, "creation_time" timestamptz NOT NULL, "last_use_time" timestamptz NOT NULL, "condition_type" character varying(32) NOT NULL, "usage_count" integer NOT NULL, "recipe_schema_version" text NOT NULL, "data" text NOT NULL, "disabled" boolean NOT NULL DEFAULT false, "disabled_by" character varying(32) NULL, "disabled_reason" text NULL, PRIMARY KEY ("name"), CONSTRAINT "saved_trigger_condition_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "user" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "saved_trigger_condition_disabled_by_fkey" FOREIGN KEY ("disabled_by") REFERENCES "user" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create index "saved_trigger_condition_data_key" to table: "saved_trigger_condition"
CREATE UNIQUE INDEX "saved_trigger_condition_data_key" ON "saved_trigger_condition" ("data");
-- create "security_incident_event_id" table
CREATE TABLE "security_incident_event_id" ("incident_id" character varying(36) NOT NULL, "vehicle_id" character varying(36) NOT NULL, "event_id" character varying(36) NOT NULL, "event_type" character varying(10) NOT NULL, PRIMARY KEY ("incident_id", "vehicle_id", "event_id"), CONSTRAINT "security_incident_event_id_incident_id_fkey" FOREIGN KEY ("incident_id") REFERENCES "vehicle_security_incident" ("incident_id") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "security_incident_event_id_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "vehicle_eids_event" table
CREATE TABLE "vehicle_eids_event" ("event_id" character varying(36) NOT NULL, "vehicle_id" character varying(36) NOT NULL, "attack_id" character varying(36) NOT NULL, "arp_hw_type" integer NULL, "arp_sip" integer NULL, "arp_size" integer NULL, "arp_smac" integer NULL, "mac_dmac" integer NULL, "mac_smac" integer NULL, "mac_vlan" integer NULL, "ipv4_dst_addr" character varying(16) NULL, "ipv4_src_addr" character varying(16) NULL, "ipv6_src_addr0" character varying(32) NULL, "ipv6_src_addr1" character varying(32) NULL, "ipv6_dst_addr0" character varying(32) NULL, "ipv6_dst_addr1" character varying(32) NULL, "tcp_dport" integer NULL, "tcp_sport" integer NULL, "tcp_vlan" integer NULL, "udp_dport" integer NULL, "udp_sport" integer NULL, "udp_vlan" integer NULL, "event_time" timestamptz NOT NULL, "creation_time" timestamptz NOT NULL, "attack_description" character varying(200) NULL, PRIMARY KEY ("event_id"), CONSTRAINT "vehicle_eids_event_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create index "vehicle_eids_event_vehicle_id_attack_id_event_time_idx" to table: "vehicle_eids_event"
CREATE INDEX "vehicle_eids_event_vehicle_id_attack_id_event_time_idx" ON "vehicle_eids_event" ("vehicle_id", "attack_id", "event_time");
-- create "vehicle_uids_stats_attack_entry" table
CREATE TABLE "vehicle_uids_stats_attack_entry" ("attack_id" character varying(36) NOT NULL, "vehicle_id" character varying(36) NOT NULL, "attack_type" character varying(10) NOT NULL, "counter" integer NOT NULL, "event_time" timestamptz NOT NULL, "creation_time" timestamptz NOT NULL, PRIMARY KEY ("vehicle_id", "attack_id"), CONSTRAINT "vehicle_uids_stats_attack_entry_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "cleanup_schedule" table
CREATE TABLE "cleanup_schedule" ("target" character varying(50) NOT NULL, "duration" integer NOT NULL, "creation_time" timestamptz NOT NULL, "created_by" character varying(32) NOT NULL, "modification_time" timestamptz NULL, "modified_by" character varying(32) NULL, PRIMARY KEY ("target"), CONSTRAINT "cleanup_schedule_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "user" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "cleanup_schedule_modified_by_fkey" FOREIGN KEY ("modified_by") REFERENCES "user" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create "data_cap_deployment" table
CREATE TABLE "data_cap_deployment" ("deployment_id" character varying(36) NOT NULL, "config_id" character varying(36) NOT NULL, "state" character varying(10) NOT NULL, "deploy_time" timestamptz NOT NULL, "deployed_by" character varying(32) NOT NULL, "inactive_time" timestamptz NULL, "vehicle_filter_id" character varying(36) NOT NULL, PRIMARY KEY ("deployment_id"), CONSTRAINT "data_cap_deployment_config_id_fkey" FOREIGN KEY ("config_id") REFERENCES "data_cap_config" ("config_id") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "data_cap_deployment_deployed_by_fkey" FOREIGN KEY ("deployed_by") REFERENCES "user" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "data_cap_deployment_vehicle_filter_id_fkey" FOREIGN KEY ("vehicle_filter_id") REFERENCES "fleet" ("name") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create "nss_system_share" table
CREATE TABLE "nss_system_share" ("share_id" character varying(36) NOT NULL, "stat_id" character varying(36) NOT NULL, "uuid" character varying(36) NOT NULL, "name" character varying(32) NOT NULL, "status" character varying(16) NOT NULL, "size" double precision NOT NULL, "used_space" double precision NOT NULL, "free_space" double precision NOT NULL, "encrypted" boolean NOT NULL, "mount_point" character varying(32) NOT NULL, "is_mounted" boolean NOT NULL, "directory_ids" character varying(36)[] NULL, "export_ids" character varying(36)[] NULL, PRIMARY KEY ("share_id"), CONSTRAINT "nss_system_share_stat_id_fkey" FOREIGN KEY ("stat_id") REFERENCES "nss_stat" ("stat_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create index "nss_system_share_stat_id_idx" to table: "nss_system_share"
CREATE INDEX "nss_system_share_stat_id_idx" ON "nss_system_share" ("stat_id");
-- create "storage_policy" table
CREATE TABLE "storage_policy" ("policy_id" character varying(36) NOT NULL, "max_num_files" integer NULL, "max_file_size" integer NULL, "max_buffer_size" integer NULL, "raw_json" json NOT NULL, PRIMARY KEY ("policy_id"), CONSTRAINT "storage_policy_policy_id_fkey" FOREIGN KEY ("policy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "vehicle_eids_status" table
CREATE TABLE "vehicle_eids_status" ("vehicle_id" character varying(36) NOT NULL, "eids_version" bigint NULL, "analyzer_version" bigint NULL, "ruleset_version" character varying(50) NULL, "api_version" bigint NULL, "config_version" bigint NULL, "analyzer_running_state" integer NULL, "vender_id" character varying(36) NULL, "vin" character varying(64) NULL, "region" bigint NULL, "connectivity" bigint NULL, "ap_version" character varying(36) NULL, "switch_version" character varying(36) NULL, "eth_db_version" character varying(36) NULL, "time_mode" integer NULL, "up_time" bigint NULL, "event_time" timestamptz NOT NULL, "creation_time" timestamptz NOT NULL, CONSTRAINT "vehicle_eids_status_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "dlt_message" table
CREATE TABLE "dlt_message" ("log_filtering_id" character varying(36) NOT NULL, "app_id" character varying(10) NOT NULL, "dlt_text" bytea NOT NULL, "event_time" character varying(30) NOT NULL, PRIMARY KEY ("log_filtering_id", "app_id", "event_time"), CONSTRAINT "dlt_message_log_filtering_id_fkey" FOREIGN KEY ("log_filtering_id") REFERENCES "log_filtering" ("log_filtering_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create "download_request" table
CREATE TABLE "download_request" ("request_id" character varying(36) NOT NULL, "file_id" character varying(36) NULL, "vehicle_id" character varying(36) NULL, "policy_id" character varying(36) NULL, "trigger_policy_id" integer NULL, "from_time" timestamptz NOT NULL, "to_time" timestamptz NOT NULL, "num_data_records" integer NOT NULL DEFAULT 0, "total_size_data_records" double precision NOT NULL DEFAULT 0.0, "num_images" integer NOT NULL DEFAULT 0, "total_size_images" double precision NOT NULL DEFAULT 0.0, "checksum" character varying(64) NULL, "state" character varying(32) NULL, "error_msg" character varying(512) NULL, "created_by" character varying(256) NOT NULL, "creation_time" timestamptz NOT NULL, PRIMARY KEY ("request_id"), CONSTRAINT "download_request_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "user" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "download_request_policy_id_fkey" FOREIGN KEY ("policy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "download_request_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "event_info_capture" table
CREATE TABLE "event_info_capture" ("policy_id" character varying(36) NOT NULL, "trigger_policy_id" integer NOT NULL, "targets" text NOT NULL, "duration_before_start" integer NULL, PRIMARY KEY ("policy_id", "trigger_policy_id"), CONSTRAINT "event_info_capture_policy_id_fkey" FOREIGN KEY ("policy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "event_info_capture_trigger_policy_id_fkey" FOREIGN KEY ("trigger_policy_id") REFERENCES "trigger_policy" ("trigger_policy_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create "use_case" table
CREATE TABLE "use_case" ("use_case_name" character varying(32) NOT NULL, "kafka_topic_name_complete_data" character varying(64) NOT NULL, "kafka_topic_name_incomplete_data" character varying(64) NOT NULL, "max_time_to_wait_for_stop_record" integer NOT NULL, "created_by" character varying(256) NOT NULL, "creation_time" timestamptz NOT NULL, "modification_time" timestamptz NOT NULL, PRIMARY KEY ("use_case_name"), CONSTRAINT "use_case_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "user" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create "vcc_stats_capture" table
CREATE TABLE "vcc_stats_capture" ("policy_id" character varying(36) NOT NULL, "trigger_policy_id" integer NOT NULL, "stats" text NOT NULL, "sample_interval" integer NOT NULL, PRIMARY KEY ("policy_id", "trigger_policy_id"), CONSTRAINT "vcc_stats_capture_policy_id_fkey" FOREIGN KEY ("policy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "vcc_stats_capture_trigger_policy_id_fkey" FOREIGN KEY ("trigger_policy_id") REFERENCES "trigger_policy" ("trigger_policy_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create "vehicle_latest_policy_deployment" table
CREATE TABLE "vehicle_latest_policy_deployment" ("vehicle_id" character varying(36) NOT NULL, "policy_id" character varying(36) NOT NULL, "category" character varying(32) NOT NULL, "subtype" character varying(32) NOT NULL, "deployment_id" character varying(36) NOT NULL, "last_schedule_time" timestamptz NOT NULL, "retry_count" integer NOT NULL, PRIMARY KEY ("vehicle_id", "subtype", "category"), CONSTRAINT "vehicle_latest_policy_deployment_deployment_id_fkey" FOREIGN KEY ("deployment_id") REFERENCES "policy_deployment" ("deployment_id") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "vehicle_latest_policy_deployment_policy_id_fkey" FOREIGN KEY ("policy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "vehicle_latest_policy_deployment_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "capture" table
CREATE TABLE "capture" ("policy_id" character varying(36) NOT NULL, "trigger_policy_id" integer NOT NULL, "raw_json" json NOT NULL, PRIMARY KEY ("policy_id", "trigger_policy_id"), CONSTRAINT "capture_policy_id_fkey" FOREIGN KEY ("policy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "capture_trigger_policy_id_fkey" FOREIGN KEY ("trigger_policy_id") REFERENCES "trigger_policy" ("trigger_policy_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create "log_file_attributes_capture" table
CREATE TABLE "log_file_attributes_capture" ("policy_id" character varying(36) NOT NULL, "trigger_policy_id" integer NOT NULL, "value" text NOT NULL, PRIMARY KEY ("policy_id", "trigger_policy_id"), CONSTRAINT "log_file_attributes_capture_policy_id_fkey" FOREIGN KEY ("policy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "log_file_attributes_capture_trigger_policy_id_fkey" FOREIGN KEY ("trigger_policy_id") REFERENCES "trigger_policy" ("trigger_policy_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- create "policy_data_source" table
CREATE TABLE "policy_data_source" ("policy_id" character varying(36) NOT NULL, "name" character varying(128) NOT NULL, "subpolicy_ids" character varying(36)[] NOT NULL, PRIMARY KEY ("policy_id", "name"), CONSTRAINT "policy_data_source_policy_id_fkey" FOREIGN KEY ("policy_id") REFERENCES "policy" ("policy_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create "vehicle_data_cap_status" table
CREATE TABLE "vehicle_data_cap_status" ("vehicle_id" character varying(36) NOT NULL, "deployment_id" character varying(36) NOT NULL, "state" character varying(10) NOT NULL, "creation_time" timestamptz NOT NULL, PRIMARY KEY ("vehicle_id", "deployment_id", "state"), CONSTRAINT "vehicle_data_cap_status_deployment_id_fkey" FOREIGN KEY ("deployment_id") REFERENCES "data_cap_deployment" ("deployment_id") ON UPDATE CASCADE ON DELETE CASCADE, CONSTRAINT "vehicle_data_cap_status_vehicle_id_fkey" FOREIGN KEY ("vehicle_id") REFERENCES "vin_vehicle_id" ("vehicle_id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- create index "vehicle_data_cap_status_deployment_id_state_idx" to table: "vehicle_data_cap_status"
CREATE INDEX "vehicle_data_cap_status_deployment_id_state_idx" ON "vehicle_data_cap_status" ("deployment_id", "state");
-- create index "vehicle_data_cap_status_vehicle_id_creation_time_state_idx" to table: "vehicle_data_cap_status"
CREATE INDEX "vehicle_data_cap_status_vehicle_id_creation_time_state_idx" ON "vehicle_data_cap_status" ("vehicle_id", "creation_time", "state");
